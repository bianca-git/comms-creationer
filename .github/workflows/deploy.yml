name: Deploy to GitHub Pages

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:

permissions:
  contents: read
  pages: write
  id-token: write

concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  build:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
        
    - name: Install dependencies
      run: npm ci
      
    - name: Validate manifest
      run: |
        echo "Validating Office Add-in manifest..."
        node -e "
          const fs = require('fs');
          const path = require('path');
          
          // Check if manifest exists
          const manifestPath = path.join(process.cwd(), 'manifest.xml');
          if (!fs.existsSync(manifestPath)) {
            console.error('‚ùå manifest.xml not found');
            process.exit(1);
          }
          
          // Read and validate basic XML structure
          const manifest = fs.readFileSync(manifestPath, 'utf8');
          if (!manifest.includes('<OfficeApp')) {
            console.error('‚ùå Invalid manifest structure');
            process.exit(1);
          }
          
          console.log('‚úÖ Manifest validation passed');
        "
        
    - name: Build project
      run: npm run build
      
    - name: Update manifest URLs for GitHub Pages
      run: |
        echo "Updating manifest URLs for GitHub Pages deployment..."
        node -e "
          const fs = require('fs');
          const path = require('path');
          
          const manifestPath = path.join(process.cwd(), 'dist', 'manifest.xml');
          let manifest = fs.readFileSync(manifestPath, 'utf8');
          
          // Get repository info from GitHub context
          const repoOwner = process.env.GITHUB_REPOSITORY.split('/')[0];
          const repoName = process.env.GITHUB_REPOSITORY.split('/')[1];
          const baseUrl = \`https://\${repoOwner}.github.io/\${repoName}\`;
          
          // Update URLs in manifest
          manifest = manifest.replace(/https:\/\/localhost:3000/g, baseUrl);
          manifest = manifest.replace(/https:\/\/yourdomain\.com/g, baseUrl);
          
          fs.writeFileSync(manifestPath, manifest);
          console.log(\`‚úÖ Updated manifest URLs to: \${baseUrl}\`);
        "
      env:
        GITHUB_REPOSITORY: ${{ github.repository }}
        
    - name: Create deployment info
      run: |
        echo "Creating deployment information..."
        cat > dist/deployment-info.json << EOF
        {
          "deployedAt": "$(date -u +%Y-%m-%dT%H:%M:%SZ)",
          "repository": "${{ github.repository }}",
          "commit": "${{ github.sha }}",
          "branch": "${{ github.ref_name }}",
          "workflow": "${{ github.workflow }}",
          "runId": "${{ github.run_id }}",
          "baseUrl": "https://${{ github.repository_owner }}.github.io/${{ github.event.repository.name }}"
        }
        EOF
        
    - name: Setup Pages
      if: github.ref == 'refs/heads/main'
      uses: actions/configure-pages@v4
      
    - name: Upload artifact
      if: github.ref == 'refs/heads/main'
      uses: actions/upload-pages-artifact@v3
      with:
        path: ./dist
        
  deploy:
    if: github.ref == 'refs/heads/main'
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build
    
    steps:
    - name: Deploy to GitHub Pages
      id: deployment
      uses: actions/deploy-pages@v4
      
    - name: Display deployment URL
      run: |
        echo "üöÄ Deployment successful!"
        echo "üìç Add-in URL: ${{ steps.deployment.outputs.page_url }}"
        echo "üìã Manifest URL: ${{ steps.deployment.outputs.page_url }}manifest.xml"
        echo ""
        echo "Next steps:"
        echo "1. Update your Excel with the manifest URL above"
        echo "2. Test the add-in functionality"
        echo "3. Share with your team!"

